{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\clientegestioncc\\\\src\\\\MiCuenta.js\",\n  _s = $RefreshSig$();\n// src/MiCuenta.js\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MiCuenta = () => {\n  _s();\n  const [usuario, setUsuario] = useState(null);\n  const [nombre, setNombre] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [mensaje, setMensaje] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Hacemos que obtenerUsuario sea estable y no cambie entre renders\n  const obtenerUsuario = useCallback(async () => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (!jwt) {\n      navigate(\"/login\"); // Si no está autenticado, redirige a login\n      return;\n    }\n    try {\n      const response = await fetch(\"http://gestion.local/api/user\", {\n        method: \"GET\",\n        headers: {\n          \"Authorization\": `Bearer ${jwt}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUsuario(data);\n        setNombre(data.nombre);\n        setEmail(data.email);\n      } else {\n        setMensaje(\"No se pudo obtener el usuario.\");\n      }\n    } catch (error) {\n      setMensaje(\"Error al obtener el usuario.\");\n      console.error(error);\n    }\n  }, [navigate]); // Dependemos de `navigate`, ya que está en el hook\n\n  useEffect(() => {\n    obtenerUsuario(); // Obtener los datos del usuario cuando se monta el componente\n  }, [obtenerUsuario]); // Agregar obtenerUsuario como dependencia\n\n  const actualizarUsuario = async () => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (!jwt) {\n      navigate(\"/login\"); // Si no está autenticado, redirige a login\n      return;\n    }\n    const datosActualizados = {\n      nombre,\n      email,\n      password\n    };\n    try {\n      const response = await fetch(\"http://gestion.local/api/user\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${jwt}`\n        },\n        body: JSON.stringify(datosActualizados)\n      });\n      if (response.ok) {\n        setMensaje(\"Datos actualizados correctamente.\");\n        obtenerUsuario(); // Actualizar los datos del usuario\n      } else {\n        setMensaje(\"Error al actualizar los datos.\");\n      }\n    } catch (error) {\n      setMensaje(\"Error al actualizar los datos.\");\n      console.error(error);\n    }\n  };\n  const eliminarUsuario = async () => {\n    const confirmacion = window.confirm(\"¿Estás seguro de que quieres borrar tu usuario?\");\n    if (confirmacion) {\n      const jwt = localStorage.getItem(\"jwt\");\n      if (!jwt) {\n        navigate(\"/login\"); // Si no está autenticado, redirige a login\n        return;\n      }\n      try {\n        const response = await fetch(\"http://gestion.local/api/user\", {\n          method: \"DELETE\",\n          headers: {\n            \"Authorization\": `Bearer ${jwt}`\n          }\n        });\n        if (response.ok) {\n          // Elimina los datos del localStorage\n          localStorage.removeItem(\"jwt\");\n          localStorage.removeItem(\"expira\");\n\n          // Verifica que el localStorage está vacío\n          console.log(localStorage); // Asegúrate de que no haya datos\n\n          // Redirige a la página principal después de eliminar el usuario\n          navigate(\"/\");\n        } else {\n          setMensaje(\"Error al eliminar el usuario.\");\n        }\n      } catch (error) {\n        setMensaje(\"Error al eliminar el usuario.\");\n        console.error(error);\n      }\n    }\n  };\n  const refrescarToken = async () => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (!jwt) {\n      navigate(\"/login\"); // Si no está autenticado, redirige a login\n      return;\n    }\n    try {\n      const response = await fetch(\"http://gestion.local/api/token/refresh\", {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${jwt}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem(\"jwt\", data.jwt); // Actualizamos el JWT en el localStorage\n        setMensaje(\"Token refrescado correctamente.\");\n      } else {\n        setMensaje(\"Error al refrescar el token.\");\n      }\n    } catch (error) {\n      setMensaje(\"Error al refrescar el token.\");\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mi Cuenta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), usuario ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Nombre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 14\n        }, this), \" \", usuario.nombre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 14\n        }, this), \" \", usuario.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Actualizar Datos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Nombre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: nombre,\n            onChange: e => setNombre(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Contrase\\xF1a:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: actualizarUsuario,\n          children: \"Actualizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: eliminarUsuario,\n          style: {\n            backgroundColor: \"red\",\n            color: \"white\"\n          },\n          children: \"Eliminar Cuenta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: refrescarToken,\n          children: \"Refrescar Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando datos de usuario...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), mensaje && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mensaje\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(MiCuenta, \"zMf7TVEpx7arwGj35KoiH0b7EQ4=\", false, function () {\n  return [useNavigate];\n});\n_c = MiCuenta;\nexport default MiCuenta;\nvar _c;\n$RefreshReg$(_c, \"MiCuenta\");","map":{"version":3,"names":["useState","useEffect","useCallback","useNavigate","jsxDEV","_jsxDEV","MiCuenta","_s","usuario","setUsuario","nombre","setNombre","email","setEmail","password","setPassword","mensaje","setMensaje","navigate","obtenerUsuario","jwt","localStorage","getItem","response","fetch","method","headers","ok","data","json","error","console","actualizarUsuario","datosActualizados","body","JSON","stringify","eliminarUsuario","confirmacion","window","confirm","removeItem","log","refrescarToken","setItem","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","backgroundColor","color","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/clientegestioncc/src/MiCuenta.js"],"sourcesContent":["// src/MiCuenta.js\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst MiCuenta = () => {\r\n  const [usuario, setUsuario] = useState(null);\r\n  const [nombre, setNombre] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [mensaje, setMensaje] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  // Hacemos que obtenerUsuario sea estable y no cambie entre renders\r\n  const obtenerUsuario = useCallback(async () => {\r\n    const jwt = localStorage.getItem(\"jwt\");\r\n    if (!jwt) {\r\n      navigate(\"/login\"); // Si no está autenticado, redirige a login\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://gestion.local/api/user\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Authorization\": `Bearer ${jwt}`,\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setUsuario(data);\r\n        setNombre(data.nombre);\r\n        setEmail(data.email);\r\n      } else {\r\n        setMensaje(\"No se pudo obtener el usuario.\");\r\n      }\r\n    } catch (error) {\r\n      setMensaje(\"Error al obtener el usuario.\");\r\n      console.error(error);\r\n    }\r\n  }, [navigate]); // Dependemos de `navigate`, ya que está en el hook\r\n\r\n  useEffect(() => {\r\n    obtenerUsuario(); // Obtener los datos del usuario cuando se monta el componente\r\n  }, [obtenerUsuario]); // Agregar obtenerUsuario como dependencia\r\n\r\n  const actualizarUsuario = async () => {\r\n    const jwt = localStorage.getItem(\"jwt\");\r\n    if (!jwt) {\r\n      navigate(\"/login\"); // Si no está autenticado, redirige a login\r\n      return;\r\n    }\r\n\r\n    const datosActualizados = {\r\n      nombre,\r\n      email,\r\n      password,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"http://gestion.local/api/user\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${jwt}`,\r\n        },\r\n        body: JSON.stringify(datosActualizados),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setMensaje(\"Datos actualizados correctamente.\");\r\n        obtenerUsuario(); // Actualizar los datos del usuario\r\n      } else {\r\n        setMensaje(\"Error al actualizar los datos.\");\r\n      }\r\n    } catch (error) {\r\n      setMensaje(\"Error al actualizar los datos.\");\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const eliminarUsuario = async () => {\r\n    const confirmacion = window.confirm(\"¿Estás seguro de que quieres borrar tu usuario?\");\r\n    if (confirmacion) {\r\n      const jwt = localStorage.getItem(\"jwt\");\r\n      if (!jwt) {\r\n        navigate(\"/login\"); // Si no está autenticado, redirige a login\r\n        return;\r\n      }\r\n  \r\n      try {\r\n        const response = await fetch(\"http://gestion.local/api/user\", {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Authorization\": `Bearer ${jwt}`,\r\n          },\r\n        });\r\n  \r\n        if (response.ok) {\r\n          // Elimina los datos del localStorage\r\n          localStorage.removeItem(\"jwt\");\r\n          localStorage.removeItem(\"expira\");\r\n  \r\n          // Verifica que el localStorage está vacío\r\n          console.log(localStorage);  // Asegúrate de que no haya datos\r\n  \r\n          // Redirige a la página principal después de eliminar el usuario\r\n          navigate(\"/\");\r\n        } else {\r\n          setMensaje(\"Error al eliminar el usuario.\");\r\n        }\r\n      } catch (error) {\r\n        setMensaje(\"Error al eliminar el usuario.\");\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const refrescarToken = async () => {\r\n    const jwt = localStorage.getItem(\"jwt\");\r\n    if (!jwt) {\r\n      navigate(\"/login\"); // Si no está autenticado, redirige a login\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://gestion.local/api/token/refresh\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Authorization\": `Bearer ${jwt}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        localStorage.setItem(\"jwt\", data.jwt); // Actualizamos el JWT en el localStorage\r\n        setMensaje(\"Token refrescado correctamente.\");\r\n      } else {\r\n        setMensaje(\"Error al refrescar el token.\");\r\n      }\r\n    } catch (error) {\r\n      setMensaje(\"Error al refrescar el token.\");\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h1>Mi Cuenta</h1>\r\n      {usuario ? (\r\n        <div>\r\n          <p><strong>Nombre:</strong> {usuario.nombre}</p>\r\n          <p><strong>Email:</strong> {usuario.email}</p>\r\n\r\n          <div>\r\n            <h3>Actualizar Datos</h3>\r\n            <div>\r\n              <label>Nombre:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={nombre}\r\n                onChange={(e) => setNombre(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>Email:</label>\r\n              <input\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>Contraseña:</label>\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n            <button onClick={actualizarUsuario}>Actualizar</button>\r\n          </div>\r\n\r\n          <div>\r\n            <button onClick={eliminarUsuario} style={{ backgroundColor: \"red\", color: \"white\" }}>\r\n              Eliminar Cuenta\r\n            </button>\r\n          </div>\r\n\r\n          <div>\r\n            <button onClick={refrescarToken}>Refrescar Token</button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>Cargando datos de usuario...</p>\r\n      )}\r\n\r\n      {mensaje && <p>{mensaje}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiCuenta;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}