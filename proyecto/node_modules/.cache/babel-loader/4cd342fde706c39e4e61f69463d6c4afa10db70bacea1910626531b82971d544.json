{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\clientegestioncc\\\\src\\\\Instalaciones.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Instalaciones() {\n  _s();\n  const [instalaciones, setInstalaciones] = useState([]);\n  const [nombreFiltro, setNombreFiltro] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Función para obtener instalaciones con o sin filtro de nombre\n  const obtenerInstalaciones = async (nombre = \"\") => {\n    setLoading(true);\n    setError(null);\n\n    // Construimos la URL con el parámetro de consulta (query parameter)\n    let url = \"http://gestion.local/api/instalaciones\";\n    if (nombre) {\n      url += `?nombre=${encodeURIComponent(nombre)}`; // Añadimos el filtro de nombre a la URL\n    }\n    try {\n      const response = await fetch(url, {\n        method: \"GET\",\n        // Usamos GET\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Error al obtener las instalaciones: ${response.statusText}`);\n      }\n\n      // Intentamos parsear la respuesta como JSON\n      const data = await response.json();\n\n      // Si no se puede parsear el JSON, lanzamos un error\n      if (!data) {\n        throw new Error(\"Respuesta del servidor no es un JSON válido\");\n      }\n      setInstalaciones(data);\n    } catch (error) {\n      setError(`Error: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Usamos un useEffect con un 'debounce' para retrasar la búsqueda\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      obtenerInstalaciones(nombreFiltro);\n    }, 500); // Retraso de 500ms después de dejar de escribir\n\n    // Limpiar el timeout si el valor de nombreFiltro cambia antes de los 500ms\n    return () => clearTimeout(timeoutId);\n  }, [nombreFiltro]); // Solo se ejecuta cuando el nombreFiltro cambia\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Listado de Instalaciones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"15px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Buscar por nombre...\",\n        value: nombreFiltro,\n        onChange: e => setNombreFiltro(e.target.value),\n        style: {\n          padding: \"8px\",\n          marginRight: \"10px\",\n          borderRadius: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gap: \"20px\"\n      },\n      children: instalaciones.length > 0 ? instalaciones.map(instalacion => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ddd\",\n          borderRadius: \"10px\",\n          padding: \"15px\",\n          boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: instalacion.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Descripci\\xF3n:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 18\n          }, this), \" \", instalacion.descripcion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Capacidad m\\xE1xima:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 18\n          }, this), \" \", instalacion.capacidad_maxima]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, instalacion.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay instalaciones disponibles.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Instalaciones, \"BetGQKBNIrxw+CaXTbHHtMU8Gck=\");\n_c = Instalaciones;\nexport default Instalaciones;\nvar _c;\n$RefreshReg$(_c, \"Instalaciones\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Instalaciones","_s","instalaciones","setInstalaciones","nombreFiltro","setNombreFiltro","loading","setLoading","error","setError","obtenerInstalaciones","nombre","url","encodeURIComponent","response","fetch","method","headers","ok","Error","statusText","data","json","message","timeoutId","setTimeout","clearTimeout","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","placeholder","value","onChange","e","target","marginRight","borderRadius","color","display","gap","length","map","instalacion","border","boxShadow","descripcion","capacidad_maxima","id","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/clientegestioncc/src/Instalaciones.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction Instalaciones() {\r\n  const [instalaciones, setInstalaciones] = useState([]);\r\n  const [nombreFiltro, setNombreFiltro] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Función para obtener instalaciones con o sin filtro de nombre\r\n  const obtenerInstalaciones = async (nombre = \"\") => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    // Construimos la URL con el parámetro de consulta (query parameter)\r\n    let url = \"http://gestion.local/api/instalaciones\";\r\n    if (nombre) {\r\n      url += `?nombre=${encodeURIComponent(nombre)}`; // Añadimos el filtro de nombre a la URL\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"GET\", // Usamos GET\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error al obtener las instalaciones: ${response.statusText}`);\r\n      }\r\n\r\n      // Intentamos parsear la respuesta como JSON\r\n      const data = await response.json();\r\n\r\n      // Si no se puede parsear el JSON, lanzamos un error\r\n      if (!data) {\r\n        throw new Error(\"Respuesta del servidor no es un JSON válido\");\r\n      }\r\n\r\n      setInstalaciones(data);\r\n    } catch (error) {\r\n      setError(`Error: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Usamos un useEffect con un 'debounce' para retrasar la búsqueda\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      obtenerInstalaciones(nombreFiltro);\r\n    }, 500); // Retraso de 500ms después de dejar de escribir\r\n\r\n    // Limpiar el timeout si el valor de nombreFiltro cambia antes de los 500ms\r\n    return () => clearTimeout(timeoutId);\r\n  }, [nombreFiltro]); // Solo se ejecuta cuando el nombreFiltro cambia\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>Listado de Instalaciones</h2>\r\n\r\n      {/* Campo de búsqueda */}\r\n      <div style={{ marginBottom: \"15px\" }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Buscar por nombre...\"\r\n          value={nombreFiltro}\r\n          onChange={(e) => setNombreFiltro(e.target.value)}\r\n          style={{ padding: \"8px\", marginRight: \"10px\", borderRadius: \"5px\" }}\r\n        />\r\n      </div>\r\n\r\n      {/* Estado de carga y error */}\r\n      {loading && <p>Cargando...</p>}\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      {/* Lista de instalaciones */}\r\n      <div style={{ display: \"grid\", gap: \"20px\" }}>\r\n        {instalaciones.length > 0 ? (\r\n          instalaciones.map((instalacion) => (\r\n            <div\r\n              key={instalacion.id}\r\n              style={{\r\n                border: \"1px solid #ddd\",\r\n                borderRadius: \"10px\",\r\n                padding: \"15px\",\r\n                boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\r\n              }}\r\n            >\r\n              <h3>{instalacion.nombre}</h3>\r\n              <p><strong>Descripción:</strong> {instalacion.descripcion}</p>\r\n              <p><strong>Capacidad máxima:</strong> {instalacion.capacidad_maxima}</p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No hay instalaciones disponibles.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Instalaciones;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}